@function sizeValue($key, $value) {
	@return if($key == "0", 0, $value + rem);
}

:host {
	$scania-black: #2d2926;
	$scania-black-80: #53565a;
	$scania-black-30: #d9d9d9;
	$scania-white: #fafafa;
	$scania-blue: #041e42;
	$scania-green: #44a878;
	$scania-orange: #e35205;
	$scania-red: #d6001c;
	$scania-blue-10: #d9e1eb;
	$scania-green-10: #d3e8d6;
	$scania-orange-10: #f7eddd;
	$scania-red-10: #f5e6e8;

	$primary-font-size: 18px;
	$secondary-font-size: 14px;

	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	color: $scania-black;
	font-size: $primary-font-size;

	$banner-colors: (
		("greeting", $scania-blue),
		("information", $scania-green),
		("warning", $scania-orange),
		("danger", $scania-red)
	);

	@each $banner-color in $banner-colors {
		$key: nth($banner-color, 1);
		$value: nth($banner-color, 2);

		.has-color-#{$key} {
			color: #{$value};
		}
	}

	$banner-background-colors: (
		("greeting", $scania-blue-10),
		("information", $scania-green-10),
		("warning", $scania-orange-10),
		("danger", $scania-red-10)
	);

	@each $banner-background-color in $banner-background-colors {
		$key: nth($banner-background-color, 1);
		$value: nth($banner-background-color, 2);

		.has-banner-background-#{$key} {
			background-color: #{$value};
		}
	}

	$marginKey: "m";
	$paddingKey: "p";
	$separator: "-";
	$sizes: (
		"0": 0,
		"1": 0.25,
		"2": 0.5,
		"3": 0.75,
		"4": 1,
		"5": 1.25,
		"6": 1.5,
		"7": 1.75,
		"8": 2,
	);

	$positions: (
		"t": "top",
		"r": "right",
		"b": "bottom",
		"l": "left",
	);

	$superPositions: (
		"x": "horizontal",
		"y": "vertical",
	);

	@mixin generateMarginsAndPaddings($marginKey, $paddingKey, $separator, $sizes, $positions, $superPositions) {
		@each $sizeKey, $sizeValue in $sizes {
			.#{$marginKey}#{$separator}#{$sizeKey} {
				margin: sizeValue($sizeKey, $sizeValue);
			}
			.#{$paddingKey}#{$separator}#{$sizeKey} {
				padding: sizeValue($sizeKey, $sizeValue);
			}

			@each $posKey, $posValue in $positions {
				.#{$marginKey}#{$posKey}#{$separator}#{$sizeKey} {
					margin-#{$posValue}: sizeValue($sizeKey, $sizeValue);
				}
				.#{$paddingKey}#{$posKey}#{$separator}#{$sizeKey} {
					padding-#{$posValue}: sizeValue($sizeKey, $sizeValue);
				}
			}

			@each $posKey, $posValue in $superPositions {
				@if ($posKey == "x") {
					.#{$marginKey}#{$posKey}#{$separator}#{$sizeKey} {
						margin-left: sizeValue($sizeKey, $sizeValue);
						margin-right: sizeValue($sizeKey, $sizeValue);
					}
					.#{$paddingKey}#{$posKey}#{$separator}#{$sizeKey} {
						padding-left: sizeValue($sizeKey, $sizeValue);
						padding-right: sizeValue($sizeKey, $sizeValue);
					}
				}

				@if ($posKey == "y") {
					.#{$marginKey}#{$posKey}#{$separator}#{$sizeKey} {
						margin-top: sizeValue($sizeKey, $sizeValue);
						margin-bottom: sizeValue($sizeKey, $sizeValue);
					}

					.#{$paddingKey}#{$posKey}#{$separator}#{$sizeKey} {
						padding-top: sizeValue($sizeKey, $sizeValue);
						padding-bottom: sizeValue($sizeKey, $sizeValue);
					}
				}
			}
		}
	}

	/* creates each class */
	@include generateMarginsAndPaddings($marginKey, $paddingKey, $separator, $sizes, $positions, $superPositions);

	.mt-auto {
		margin-top: auto;
	}

	$lengths: (("quarter", 25%), ("half", 50%), ("three-quarter", 75%), ("full", 100%));

	@each $width in $lengths {
		$widthKey: nth($width, 1);
		$widthValue: nth($width, 2);

		.width#{$separator}#{$widthKey} {
			width: #{$widthValue};
		}
		.height#{$separator}#{$widthKey} {
			height: #{$widthValue};
		}
	}

	/* helper classes */
	$borderRadiusKey: "br";
	$sizes: (
		("0", 0px),
		("1", 4px),
		("2", 8px),
		("3", 12px),
		("4", 16px),
		("5", 20px),
		("6", 24px),
		("7", 28px),
		("8", 32px),
		("9", 36px),
		("10", 40px)
	);

	@function borderRadiusValue($key, $value) {
		@return if($key == "0", 0, $value);
	}

	/* creates each class */

	@each $size in $sizes {
		$sizeKey: nth($size, 1);
		$sizeValue: nth($size, 2);

		.#{$borderRadiusKey}#{$separator}#{$sizeKey} {
			border-radius: borderRadiusValue($sizeKey, $sizeValue) !important;
		}
	}

	$opacities: (
		("0", 0),
		("1", 0.1),
		("2", 0.2),
		("3", 0.3),
		("4", 0.4),
		("5", 0.5),
		("6", 0.6),
		("7", 0.7),
		("8", 0.8),
		("9", 0.9),
		("10", 1)
	);

	@each $opacity in $opacities {
		$opacityKey: nth($opacity, 1);
		$opacityValue: nth($opacity, 2);

		.opacity-#{$opacityKey} {
			opacity: #{$opacityValue};
		}
	}

	.is-rounded {
		border-radius: 9999px;
	}

	.image {
		display: block;
		position: relative;
	}

	.image img {
		display: block;
		height: auto;
		width: 100%;
	}

	.image-border {
		border: 1px solid $scania-black-80;
	}

	$imageSizes: 32, 40, 48, 64, 96, 128, 256;

	@each $imageSize in $imageSizes {
		.is-#{$imageSize}x#{$imageSize} {
			height: #{$imageSize}px !important;
			width: #{$imageSize}px !important;
		}
	}

	/* utility classes */

	.column {
		display: block;
		flex-basis: 0;
		flex-grow: 1;
		flex-shrink: 1;
	}

	.column.is-narrow {
		flex: none;
	}

	.has-banner-shadow {
		box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
	}

	.has-text-weight-bold {
		font-weight: bold;
	}

	.position-relative {
		position: relative;
	}

	.position-fixed {
		position: fixed;
	}

	.position-absolute {
		position: absolute;
	}

	.is-flex {
		display: flex;
	}

	.is-underlined {
		text-decoration: underline;
	}

	.is-uppercase {
		text-transform: uppercase;
	}

	.pointer {
		cursor: pointer;
	}

	.forbidden {
		cursor: not-allowed;
	}

	.icon {
		align-items: center;
		display: inline-flex;
		justify-content: center;
		height: 1.5rem;
		width: 1.5rem;
	}

	.icon.is-small {
		height: 1rem;
		width: 1rem;
	}

	.icon.is-medium {
		height: 2rem;
		width: 2rem;
	}

	.icon.is-large {
		height: 3rem;
		width: 3rem;
	}

	.is-pulled-left {
		float: left;
	}

	.is-pulled-right {
		float: right;
	}

	.is-horizontal-aligned {
		margin-top: auto;
		margin-bottom: auto;
	}

	.is-hidden {
		display: none;
	}

	.additional-count {
		background-color: $scania-black-30;
		color: $scania-black-80;
		font-size: $secondary-font-size;
	}

	.margin-auto {
		margin: auto;
	}

	.background-black {
		background-color: $scania-black;
	}

	.background-grey {
		background-color: $scania-black-30;
	}

	.background-white {
		background-color: $scania-white;
	}

	.text-left {
		text-align: left;
	}

	.text-right {
		text-align: right;
	}

	.text-center {
		text-align: center;
	}

	.align-center-screen {
		display: flex;
		flex-flow: column nowrap;
		justify-content: center;
		align-items: center;
	}

	.gap-100 {
		margin-left: 100px;
	}
}
